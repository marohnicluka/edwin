/* gtkspell3-3.0.vapi generated by vapigen-0.24 */

[CCode (cprefix = "GtkSpell", gir_namespace = "GtkSpell", gir_version = "3.0", lower_case_cprefix = "gtk_spell_")]
namespace GtkSpell {
    
    [CCode (cheader_filename = "gtkspell/gtkspell.h", type_id = "gtk_spell_checker_get_type ()")]
    public class Checker : GLib.InitiallyUnowned {
        [CCode (has_construct_function = false)]
        public Checker ();
        public bool attach (Gtk.TextView view);
        public static string decode_language_code (string lang);
        public void detach ();
        public static unowned GtkSpell.Checker get_from_text_view (Gtk.TextView view);
        public unowned string get_language ();
        public static GLib.List<string> get_language_list ();
        public Gtk.Widget get_suggestions_menu (Gtk.TextIter iter);
        public void recheck_all ();
        public bool set_language (string? lang) throws GLib.Error;
        [NoAccessorMethod]
        public bool decode_language_codes { get; set; }
        public virtual signal void language_changed (string new_lang);
    }
    
    [CCode (cheader_filename = "gtkspell/gtkspell.h", cprefix = "GTK_SPELL_ERROR_")]
    public errordomain Error {
        BACKEND;
        public static GLib.Quark quark ();
    }
    
}
